#############################################################################
# Makefile for building: bin/tarotQt
# Generated by qmake (2.01a) (Qt 4.8.6) on: Sun Jan 3 06:54:32 2016
# Project:  Tarot.pro
# Template: app
# Command: /share/deep_learning/anaconda/bin/qmake -o Makefile Tarot.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -std=c++11 -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/share/deep_learning/anaconda/mkspecs/linux-g++ -I. -I/share/deep_learning/anaconda/include/QtCore -I/share/deep_learning/anaconda/include/QtGui -I/share/deep_learning/anaconda/include -I. -Isrc -I.
LINK          = g++
LFLAGS        = -Wl,-O1 -Wl,-rpath,/share/deep_learning/anaconda/lib
LIBS          = $(SUBLIBS)  -L/share/deep_learning/anaconda/lib -lQtGui -L/share/deep_learning/anaconda/lib -L/usr/X11R6/lib -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /share/deep_learning/anaconda/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = obj/

####### Files

SOURCES       = src/AI.cpp \
		src/Beginner.cpp \
		src/Card.cpp \
		src/CardPixmap.cpp \
		src/Deck.cpp \
		src/Game.cpp \
		src/getChar.cpp \
		src/getInt.cpp \
		src/Human.cpp \
		src/main.cpp \
		src/Player.cpp \
		src/TarotScene.cpp \
		src/Team.cpp \
		src/Trick.cpp 
OBJECTS       = obj/AI.o \
		obj/Beginner.o \
		obj/Card.o \
		obj/CardPixmap.o \
		obj/Deck.o \
		obj/Game.o \
		obj/getChar.o \
		obj/getInt.o \
		obj/Human.o \
		obj/main.o \
		obj/Player.o \
		obj/TarotScene.o \
		obj/Team.o \
		obj/Trick.o
DIST          = /share/deep_learning/anaconda/mkspecs/common/unix.conf \
		/share/deep_learning/anaconda/mkspecs/common/linux.conf \
		/share/deep_learning/anaconda/mkspecs/common/gcc-base.conf \
		/share/deep_learning/anaconda/mkspecs/common/gcc-base-unix.conf \
		/share/deep_learning/anaconda/mkspecs/common/g++-base.conf \
		/share/deep_learning/anaconda/mkspecs/common/g++-unix.conf \
		/share/deep_learning/anaconda/mkspecs/qconfig.pri \
		/share/deep_learning/anaconda/mkspecs/modules/qt_webkit_version.pri \
		/share/deep_learning/anaconda/mkspecs/features/qt_functions.prf \
		/share/deep_learning/anaconda/mkspecs/features/qt_config.prf \
		/share/deep_learning/anaconda/mkspecs/features/exclusive_builds.prf \
		/share/deep_learning/anaconda/mkspecs/features/default_pre.prf \
		/share/deep_learning/anaconda/mkspecs/features/release.prf \
		/share/deep_learning/anaconda/mkspecs/features/default_post.prf \
		/share/deep_learning/anaconda/mkspecs/features/shared.prf \
		/share/deep_learning/anaconda/mkspecs/features/unix/gdb_dwarf_index.prf \
		/share/deep_learning/anaconda/mkspecs/features/warn_on.prf \
		/share/deep_learning/anaconda/mkspecs/features/qt.prf \
		/share/deep_learning/anaconda/mkspecs/features/unix/thread.prf \
		/share/deep_learning/anaconda/mkspecs/features/moc.prf \
		/share/deep_learning/anaconda/mkspecs/features/resources.prf \
		/share/deep_learning/anaconda/mkspecs/features/uic.prf \
		/share/deep_learning/anaconda/mkspecs/features/yacc.prf \
		/share/deep_learning/anaconda/mkspecs/features/lex.prf \
		/share/deep_learning/anaconda/mkspecs/features/include_source_dir.prf \
		Tarot.pro
QMAKE_TARGET  = tarotQt
DESTDIR       = bin/
TARGET        = bin/tarotQt

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	@$(CHK_DIR_EXISTS) bin/ || $(MKDIR) bin/ 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: Tarot.pro  /share/deep_learning/anaconda/mkspecs/linux-g++/qmake.conf /share/deep_learning/anaconda/mkspecs/common/unix.conf \
		/share/deep_learning/anaconda/mkspecs/common/linux.conf \
		/share/deep_learning/anaconda/mkspecs/common/gcc-base.conf \
		/share/deep_learning/anaconda/mkspecs/common/gcc-base-unix.conf \
		/share/deep_learning/anaconda/mkspecs/common/g++-base.conf \
		/share/deep_learning/anaconda/mkspecs/common/g++-unix.conf \
		/share/deep_learning/anaconda/mkspecs/qconfig.pri \
		/share/deep_learning/anaconda/mkspecs/modules/qt_webkit_version.pri \
		/share/deep_learning/anaconda/mkspecs/features/qt_functions.prf \
		/share/deep_learning/anaconda/mkspecs/features/qt_config.prf \
		/share/deep_learning/anaconda/mkspecs/features/exclusive_builds.prf \
		/share/deep_learning/anaconda/mkspecs/features/default_pre.prf \
		/share/deep_learning/anaconda/mkspecs/features/release.prf \
		/share/deep_learning/anaconda/mkspecs/features/default_post.prf \
		/share/deep_learning/anaconda/mkspecs/features/shared.prf \
		/share/deep_learning/anaconda/mkspecs/features/unix/gdb_dwarf_index.prf \
		/share/deep_learning/anaconda/mkspecs/features/warn_on.prf \
		/share/deep_learning/anaconda/mkspecs/features/qt.prf \
		/share/deep_learning/anaconda/mkspecs/features/unix/thread.prf \
		/share/deep_learning/anaconda/mkspecs/features/moc.prf \
		/share/deep_learning/anaconda/mkspecs/features/resources.prf \
		/share/deep_learning/anaconda/mkspecs/features/uic.prf \
		/share/deep_learning/anaconda/mkspecs/features/yacc.prf \
		/share/deep_learning/anaconda/mkspecs/features/lex.prf \
		/share/deep_learning/anaconda/mkspecs/features/include_source_dir.prf \
		/share/deep_learning/anaconda/lib/libQtGui.prl \
		/share/deep_learning/anaconda/lib/libQtCore.prl
	$(QMAKE) -o Makefile Tarot.pro
/share/deep_learning/anaconda/mkspecs/common/unix.conf:
/share/deep_learning/anaconda/mkspecs/common/linux.conf:
/share/deep_learning/anaconda/mkspecs/common/gcc-base.conf:
/share/deep_learning/anaconda/mkspecs/common/gcc-base-unix.conf:
/share/deep_learning/anaconda/mkspecs/common/g++-base.conf:
/share/deep_learning/anaconda/mkspecs/common/g++-unix.conf:
/share/deep_learning/anaconda/mkspecs/qconfig.pri:
/share/deep_learning/anaconda/mkspecs/modules/qt_webkit_version.pri:
/share/deep_learning/anaconda/mkspecs/features/qt_functions.prf:
/share/deep_learning/anaconda/mkspecs/features/qt_config.prf:
/share/deep_learning/anaconda/mkspecs/features/exclusive_builds.prf:
/share/deep_learning/anaconda/mkspecs/features/default_pre.prf:
/share/deep_learning/anaconda/mkspecs/features/release.prf:
/share/deep_learning/anaconda/mkspecs/features/default_post.prf:
/share/deep_learning/anaconda/mkspecs/features/shared.prf:
/share/deep_learning/anaconda/mkspecs/features/unix/gdb_dwarf_index.prf:
/share/deep_learning/anaconda/mkspecs/features/warn_on.prf:
/share/deep_learning/anaconda/mkspecs/features/qt.prf:
/share/deep_learning/anaconda/mkspecs/features/unix/thread.prf:
/share/deep_learning/anaconda/mkspecs/features/moc.prf:
/share/deep_learning/anaconda/mkspecs/features/resources.prf:
/share/deep_learning/anaconda/mkspecs/features/uic.prf:
/share/deep_learning/anaconda/mkspecs/features/yacc.prf:
/share/deep_learning/anaconda/mkspecs/features/lex.prf:
/share/deep_learning/anaconda/mkspecs/features/include_source_dir.prf:
/share/deep_learning/anaconda/lib/libQtGui.prl:
/share/deep_learning/anaconda/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile Tarot.pro

dist: 
	@$(CHK_DIR_EXISTS) obj/tarotQt1.0.0 || $(MKDIR) obj/tarotQt1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) obj/tarotQt1.0.0/ && $(COPY_FILE) --parents src/AI.hpp src/Announcements.hpp src/Beginner.hpp src/Biddings.hpp src/Card.hpp src/CardPixmap.hpp src/Deck.hpp src/Game.hpp src/getChar.hpp src/getInt.hpp src/Human.hpp src/Player.hpp src/StratDiff.hpp src/StratLang.hpp src/Suits.hpp src/TarotScene.hpp src/Team.hpp src/Trick.hpp obj/tarotQt1.0.0/ && $(COPY_FILE) --parents src/AI.cpp src/Beginner.cpp src/Card.cpp src/CardPixmap.cpp src/Deck.cpp src/Game.cpp src/getChar.cpp src/getInt.cpp src/Human.cpp src/main.cpp src/Player.cpp src/TarotScene.cpp src/Team.cpp src/Trick.cpp obj/tarotQt1.0.0/ && (cd `dirname obj/tarotQt1.0.0` && $(TAR) tarotQt1.0.0.tar tarotQt1.0.0 && $(COMPRESS) tarotQt1.0.0.tar) && $(MOVE) `dirname obj/tarotQt1.0.0`/tarotQt1.0.0.tar.gz . && $(DEL_FILE) -r obj/tarotQt1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

obj/AI.o: src/AI.cpp src/AI.hpp \
		src/Player.hpp \
		src/Card.hpp \
		src/Suits.hpp \
		src/Deck.hpp \
		src/Biddings.hpp \
		src/Announcements.hpp \
		src/StratDiff.hpp \
		src/Beginner.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/AI.o src/AI.cpp

obj/Beginner.o: src/Beginner.cpp src/Beginner.hpp \
		src/Biddings.hpp \
		src/Card.hpp \
		src/Suits.hpp \
		src/StratDiff.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/Beginner.o src/Beginner.cpp

obj/Card.o: src/Card.cpp src/Card.hpp \
		src/Suits.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/Card.o src/Card.cpp

obj/CardPixmap.o: src/CardPixmap.cpp src/CardPixmap.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/CardPixmap.o src/CardPixmap.cpp

obj/Deck.o: src/Deck.cpp src/Deck.hpp \
		src/Card.hpp \
		src/Suits.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/Deck.o src/Deck.cpp

obj/Game.o: src/Game.cpp src/Game.hpp \
		src/Suits.hpp \
		src/Biddings.hpp \
		src/Team.hpp \
		src/Player.hpp \
		src/Card.hpp \
		src/Deck.hpp \
		src/Announcements.hpp \
		src/Human.hpp \
		src/getInt.hpp \
		src/getChar.hpp \
		src/AI.hpp \
		src/StratDiff.hpp \
		src/Beginner.hpp \
		src/Trick.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/Game.o src/Game.cpp

obj/getChar.o: src/getChar.cpp src/getChar.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/getChar.o src/getChar.cpp

obj/getInt.o: src/getInt.cpp src/getInt.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/getInt.o src/getInt.cpp

obj/Human.o: src/Human.cpp src/Human.hpp \
		src/Player.hpp \
		src/Card.hpp \
		src/Suits.hpp \
		src/Deck.hpp \
		src/Biddings.hpp \
		src/Announcements.hpp \
		src/getInt.hpp \
		src/getChar.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/Human.o src/Human.cpp

obj/main.o: src/main.cpp src/Game.hpp \
		src/Suits.hpp \
		src/Biddings.hpp \
		src/Team.hpp \
		src/Player.hpp \
		src/Card.hpp \
		src/Deck.hpp \
		src/Announcements.hpp \
		src/Human.hpp \
		src/getInt.hpp \
		src/getChar.hpp \
		src/AI.hpp \
		src/StratDiff.hpp \
		src/Beginner.hpp \
		src/Trick.hpp \
		src/CardPixmap.hpp \
		src/TarotScene.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/main.o src/main.cpp

obj/Player.o: src/Player.cpp src/Player.hpp \
		src/Card.hpp \
		src/Suits.hpp \
		src/Deck.hpp \
		src/Biddings.hpp \
		src/Announcements.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/Player.o src/Player.cpp

obj/TarotScene.o: src/TarotScene.cpp src/TarotScene.hpp \
		src/CardPixmap.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/TarotScene.o src/TarotScene.cpp

obj/Team.o: src/Team.cpp src/Team.hpp \
		src/Player.hpp \
		src/Card.hpp \
		src/Suits.hpp \
		src/Deck.hpp \
		src/Biddings.hpp \
		src/Announcements.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/Team.o src/Team.cpp

obj/Trick.o: src/Trick.cpp src/Trick.hpp \
		src/Player.hpp \
		src/Card.hpp \
		src/Suits.hpp \
		src/Deck.hpp \
		src/Biddings.hpp \
		src/Announcements.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/Trick.o src/Trick.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

